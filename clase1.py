# -*- coding: utf-8 -*-
"""CLASE1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uRk7-vHsLDQ2PhYA0i0mI7NLjSSDX0as
"""

import pandas as pd
import statsmodels.api as sm

class RegresionLinealStatsModels:
    def __init__(self, dataframe, variables_independientes, variable_dependiente, usar_dummies=False):
        """
        Inicializa el modelo con statsmodels, permitiendo usar dummies para variables categóricas.

        :param dataframe: DataFrame con los datos.
        :param variables_independientes: Lista de nombres de columnas independientes (pueden incluir categóricas).
        :param variable_dependiente: Nombre de la columna dependiente.
        :param usar_dummies: Si True, convierte variables categóricas a dummies.
        """
        self.df = dataframe.copy()
        self.variable_dependiente = variable_dependiente
        self.usar_dummies = usar_dummies

        X = self.df[variables_independientes]

        if usar_dummies:
            X = pd.get_dummies(X, drop_first=True)  # crea variables dummies
        self.X = sm.add_constant(X)  # añade intercepto
        self.y = self.df[variable_dependiente]
        self.modelo = None
        self.resultado = None

    def ajustar(self):
        """
        Ajusta el modelo OLS a los datos.
        """
        self.modelo = sm.OLS(self.y, self.X)
        self.resultado = self.modelo.fit()
        print("Modelo entrenado con éxito.")

    def resumen(self):
        """
        Muestra el resumen estadístico del modelo.
        """
        if self.resultado is None:
            raise Exception("El modelo no ha sido entrenado todavía.")
        print(self.resultado.summary())

    def predecir(self, nuevos_datos):
        """
        Predice valores con el modelo entrenado.

        :param nuevos_datos: DataFrame con las mismas columnas (dummies incluidas si usar_dummies=True).
        :return: Predicciones como pandas Series.
        """
        if self.resultado is None:
            raise Exception("El modelo no ha sido entrenado todavía.")

        if self.usar_dummies:
            nuevos_datos = pd.get_dummies(nuevos_datos, drop_first=True)

        nuevos_datos = sm.add_constant(nuevos_datos, has_constant='add')
        nuevos_datos = nuevos_datos.reindex(columns=self.X.columns, fill_value=0)

        return self.resultado.predict(nuevos_datos)